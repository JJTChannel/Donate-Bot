const Discord = require('discord.js');
const config = require('./config.json');
const colors = require("colors");
const axios = require("axios");
var use_webhook = true;

console.log("https://github.com/JJTChannel/Donate-Bot");

const client = new Discord.Client({
  intents: [
    1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536
  ],
  partials: ['CHANNEL']
});

//function ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
function send_log(color, status, reason, user, amount) {
  if (use_webhook) {
    let webhook = new Discord.WebhookClient({ url: config.webhook_log });
    let embed = new Discord.MessageEmbed()
      .setColor((color ? color : "#FF0000"))
      .setAuthor({ name: '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ ‡πÇ‡∏î‡πÄ‡∏ô‡∏ó' })
      .setDescription('‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡πÉ‡∏´‡∏°‡πà')
      .setThumbnail('https://cdn.discordapp.com/attachments/1071088361156124883/1076472811129937992/lv_0_20230218180046.gif')
    
      .setTimestamp()
      .setFooter({ text: 'JJTxStore - Donate Bot' });

    if (status == "success") {
      embed.addFields(
        { name: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', value: (status == "success" ? "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" : "‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"), inline: true },
        { name: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', value: amount + "‡∏ø", inline: true },
        { name: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', value: `<@${user}>`, inline: true },    embed.setImage('https://cdn.discordapp.com/attachments/1071088361156124883/1077241997783474367/standard.gif')
      )

      webhook.send({
        content: "‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà!",
        embeds: [embed]
      })
    } else {
      embed.addFields(
        { name: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', value: (status == "success" ? "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" : "‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"), inline: true },
        { name: '‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏', value: reason, inline: true },
        { name: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', value: `<@${user}>` },
        embed.setImage('https://cdn.discordapp.com/attachments/1071088361156124883/1077241997783474367/standard.gif')
      )

      webhook.send({
        content: "‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà!",
        embeds: [embed]
      })
    }
  }
}
//‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° receive message
client.on("messageCreate", async (message) => {
  if (message.content == config.command) {
    if (message.author.id.includes(config.ownerID)) {
      const embed_donation = new Discord.MessageEmbed()
        .setTitle(config.shop_name + " | Donate ")

        .setDescription("**‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° __Donate__ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏≤‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ï‡πà‡∏≠! **")
        .setColor('#ffffff')
        .setImage("https://cdn.discordapp.com/attachments/1071088361156124883/1077241997783474367/standard.gif")
      const row = new Discord.MessageActionRow()
        .addComponents(
          new Discord.MessageButton()
            .setCustomId('donate_button')
            .setLabel('Donate')
            .setEmoji('üßß')
            .setStyle('SUCCESS'),
        );

      message.channel.send({
        embeds: [embed_donation],
        components: [row]
      });
      message.delete();
    }
  }
})

//ready ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
client.on("ready", async () => {
  console.log(colors.green("Donation Manager | Ready!"));
  console.log("- JJTxStore - Donate BOT - ");
  console.log("");

  client.user.setActivity("Donate");
  require("./keep_alive");

  if (!config.phone || !Number(config.phone)) {
    console.log(colors.red("- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ú‡∏¥‡∏î"))
  } else {
    console.log(colors.green("- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å"))
  }
  try {
    new Discord.WebhookClient({ url: config.webhook_log })
    use_webhook = true;
    console.log(colors.green("- Webhook ‡∏ñ‡∏π‡∏Å"))
  } catch (err) {
    if (err.code == "WEBHOOK_URL_INVALID") {
      console.log(colors.red("- webhook ‡∏ú‡∏¥‡∏î"))
      use_webhook = false;
    } else {
      console.log(colors.red("- ‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏ú‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö webhook."))
    }
  }
})

client.on('interactionCreate', async (interaction) => {
  if (!interaction.isButton()) return;
  if (interaction.customId == "donate_button") {
    const modal_donation = new Discord.Modal()
      .setCustomId('donation_modal')
      .setTitle(config.shop_name + " | ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á Donate");
    const link_gift = new Discord.TextInputComponent()
      .setCustomId('link_gift')
      .setLabel("‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤ üßß")
      .setStyle('SHORT');
    const row = new Discord.MessageActionRow().addComponents(link_gift);
    modal_donation.addComponents(row);

    await interaction.showModal(modal_donation);
  }
})

client.on('interactionCreate', async (interaction) => {
  if (!interaction.isModalSubmit()) return;
  if (interaction.customId == "donation_modal") {
    const link_gift = interaction.fields.getTextInputValue('link_gift');

    if (!link_gift || link_gift == "") {
      await interaction.reply({
        content: ":x: ‡∏ã‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!",
        ephemeral: true
      })
    } else if (!config.phone || !Number(config.phone)) {
      await interaction.reply({
        content: ":x: ‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!",
        ephemeral: true
      })
    } else {
      axios.get("https://zamex-hub.000webhostapp.com/index.php?phone=" + config.phone + "&link=" + link_gift)
        .then(async (response) => {
          let data = response.data;
          if (data.reason == "VOUCHER_NOT_FOUND") {
            await interaction.reply({
              content: ":x: ‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!",
              ephemeral: true
            })
            send_log(null, "failed", "‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", interaction.user.id);
          } else if (data.reason == "VOUCHER_OUT_OF_STOCK") {
            await interaction.reply({
              content: ":x: ‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!",
              ephemeral: true
            })
            send_log(null, "failed", "‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß", interaction.user.id);
          } else if (data.reason == "VOUCHER_EXPIRED") {
            await interaction.reply({
              content: ":x: ‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß!",
              ephemeral: true
            })
            send_log(null, "failed", "‡∏ã‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏", interaction.user.id);
          } else if (data.reason == "CANNOT_GET_OWN_VOUCHER") {
            await interaction.reply({
              content: ":x: ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ!",
              ephemeral: true
            })
            send_log(null, "failed", "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ!", interaction.user.id);
          } else if (data.status == "SUCCESS") {
            await interaction.reply({
              content: ":white_check_mark: ‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≥‡∏ô‡∏ß‡∏ô " + data['amount'] + " ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö\n\n- " + config.shop_name,
              ephemeral: true
            })
            interaction.member.roles.add(config.role_donateid)
              .then(async () => { }).catch(async () => { });

            send_log("#00FF00", "success", null, interaction.user.id, data['amount']);
          } else {
            console.log(data.reason)
            await interaction.reply({
              content: ":x: ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á!",
              ephemeral: true
            })
            send_log(null, "failed", "‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô!", interaction.user.id);
          }
        })
        .catch(async (error) => {
          console.log(error)
          await interaction.reply({
            content: ":x: ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á!",
            ephemeral: true
          })
          send_log(null, "failed", "‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô!", interaction.user.id);
        });
    }
  }
})

client.login(config.token || process.env.TOKEN || process.env.token).catch(err => {
  console.log(colors.red("Donation Bot | Error"));
  console.log(colors.red(err.name + " " + err.message));
});
